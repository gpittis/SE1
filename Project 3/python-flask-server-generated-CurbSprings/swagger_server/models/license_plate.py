# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class LicensePlate(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, user_id: int=None, license_plate: str=None):  # noqa: E501
        """LicensePlate - a model defined in Swagger

        :param user_id: The user_id of this LicensePlate.  # noqa: E501
        :type user_id: int
        :param license_plate: The license_plate of this LicensePlate.  # noqa: E501
        :type license_plate: str
        """
        self.swagger_types = {
            'user_id': int,
            'license_plate': str
        }

        self.attribute_map = {
            'user_id': 'userId',
            'license_plate': 'licensePlate'
        }
        self._user_id = user_id
        self._license_plate = license_plate

    @classmethod
    def from_dict(cls, dikt) -> 'LicensePlate':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The LicensePlate of this LicensePlate.  # noqa: E501
        :rtype: LicensePlate
        """
        return util.deserialize_model(dikt, cls)

    @property
    def user_id(self) -> int:
        """Gets the user_id of this LicensePlate.


        :return: The user_id of this LicensePlate.
        :rtype: int
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id: int):
        """Sets the user_id of this LicensePlate.


        :param user_id: The user_id of this LicensePlate.
        :type user_id: int
        """

        self._user_id = user_id

    @property
    def license_plate(self) -> str:
        """Gets the license_plate of this LicensePlate.


        :return: The license_plate of this LicensePlate.
        :rtype: str
        """
        return self._license_plate

    @license_plate.setter
    def license_plate(self, license_plate: str):
        """Sets the license_plate of this LicensePlate.


        :param license_plate: The license_plate of this LicensePlate.
        :type license_plate: str
        """

        self._license_plate = license_plate
