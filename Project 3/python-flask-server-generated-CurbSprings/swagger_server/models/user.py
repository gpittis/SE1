# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.license_plate import LicensePlate  # noqa: F401,E501
from swagger_server.models.reservation import Reservation  # noqa: F401,E501
from swagger_server import util


class User(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, id: int=None, name: str=None, license_plate: LicensePlate=None, reservation: List[Reservation]=None):  # noqa: E501
        """User - a model defined in Swagger

        :param id: The id of this User.  # noqa: E501
        :type id: int
        :param name: The name of this User.  # noqa: E501
        :type name: str
        :param license_plate: The license_plate of this User.  # noqa: E501
        :type license_plate: LicensePlate
        :param reservation: The reservation of this User.  # noqa: E501
        :type reservation: List[Reservation]
        """
        self.swagger_types = {
            'id': int,
            'name': str,
            'license_plate': LicensePlate,
            'reservation': List[Reservation]
        }

        self.attribute_map = {
            'id': 'id',
            'name': 'name',
            'license_plate': 'licensePlate',
            'reservation': 'reservation'
        }
        self._id = id
        self._name = name
        self._license_plate = license_plate
        self._reservation = reservation

    @classmethod
    def from_dict(cls, dikt) -> 'User':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The User of this User.  # noqa: E501
        :rtype: User
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> int:
        """Gets the id of this User.


        :return: The id of this User.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this User.


        :param id: The id of this User.
        :type id: int
        """

        self._id = id

    @property
    def name(self) -> str:
        """Gets the name of this User.


        :return: The name of this User.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this User.


        :param name: The name of this User.
        :type name: str
        """

        self._name = name

    @property
    def license_plate(self) -> LicensePlate:
        """Gets the license_plate of this User.


        :return: The license_plate of this User.
        :rtype: LicensePlate
        """
        return self._license_plate

    @license_plate.setter
    def license_plate(self, license_plate: LicensePlate):
        """Sets the license_plate of this User.


        :param license_plate: The license_plate of this User.
        :type license_plate: LicensePlate
        """

        self._license_plate = license_plate

    @property
    def reservation(self) -> List[Reservation]:
        """Gets the reservation of this User.


        :return: The reservation of this User.
        :rtype: List[Reservation]
        """
        return self._reservation

    @reservation.setter
    def reservation(self, reservation: List[Reservation]):
        """Sets the reservation of this User.


        :param reservation: The reservation of this User.
        :type reservation: List[Reservation]
        """

        self._reservation = reservation
